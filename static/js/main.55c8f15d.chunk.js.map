{"version":3,"sources":["calculator/calc.js","index.js"],"names":["App","useState","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","eval","toString","createDigits","digits","i","push","onClick","calculate","deleteLast","className","ReactDOM","render","document","getElementById"],"mappings":"+2BAGMA,IAAM,SAANA,MAEF,cAAwBC,oDAAS,IAAjC,4MAAOC,KAAP,cAAaC,QAAb,cACA,WAA4BF,oDAAS,IAArC,6MAAOG,OAAP,cAAeC,UAAf,cAEMC,IAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAE3BC,WAAa,SAAbA,WAAaC,OAEXF,IAAIG,SAASD,QAAmB,KAATN,MACvBI,IAAIG,SAASD,QAAUF,IAAIG,SAASP,KAAKQ,OAAO,MAKpDP,QAAQD,KAAOM,OAEVF,IAAIG,SAASD,QACdH,UAAUM,KAAKT,KAAOM,OAAOI,cAI/BC,aAAe,WAGjB,IAFA,IAAMC,EAAS,GADQ,WAGdC,GACLD,EAAOE,KACH,qEACIC,QAAS,kBAAMV,WAAWQ,EAAEH,aADhC,SAGKG,GADIA,KAJRA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAUT,OAAOD,GAILI,UAAY,SAAZA,YACFf,QAAQQ,KAAKT,MAAMU,aAGjBO,WAAa,WACf,GAAY,IAARjB,KAAJ,CAIA,IAAMM,EAAQN,KAAKQ,MAAM,GAAG,GAE5BP,QAAQK,KAGR,OACA,kEAAKY,UAAU,MAAf,SACI,mEAAKA,UAAU,aAAf,UAEI,mEAAKA,UAAU,UAAf,UACKhB,OAAS,mFAASA,OAAT,OAA2B,GADzC,OAEMF,MAAQ,OAGd,mEAAKkB,UAAU,YAAf,UACI,qEAAQH,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eAEA,qEAAQU,QAASE,WAAjB,oBAGJ,mEAAKC,UAAU,SAAf,UACMP,eACF,qEAAQI,QAAS,kBAAMV,WAAW,OAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eAEA,qEAAQU,QAASC,UAAjB,wBAWLlB,2B,6BC1Ff,sDAMAqB,IAASC,OAAO,cAAC,IAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.55c8f15d.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport './calc.css'\r\n\r\nconst App = () => {\r\n\r\n    const [calc, setCalc] = useState(\"\");\r\n    const [result, setResult] = useState(\"\");\r\n\r\n    const ops = ['/', '*', '+', '-', '.'];\r\n\r\n    const updateCalc = value => {\r\n        if (\r\n            ops.includes(value) && calc === '' ||\r\n            ops.includes(value) && ops.includes(calc.slice(-1))\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setCalc(calc + value);\r\n\r\n        if (!ops.includes(value)) {\r\n            setResult(eval(calc + value).toString());\r\n        }\r\n    }\r\n     \r\n    const createDigits = () => {\r\n        const digits = [];\r\n\r\n        for (let i = 1; i < 10; i++) {\r\n            digits.push(\r\n                <button\r\n                    onClick={() => updateCalc(i.toString())}\r\n                    key={i}>\r\n                    {i}\r\n                </button>\r\n            )\r\n        }\r\n\r\n        return digits\r\n\r\n    }\r\n\r\n    const calculate = () => {\r\n        setCalc(eval(calc).toString());\r\n    }\r\n\r\n    const deleteLast = () => {\r\n        if (calc == '') {\r\n            return;\r\n        }\r\n\r\n        const value = calc.slice(0,-1);\r\n\r\n        setCalc(value);\r\n    }\r\n\r\n        return (\r\n        <div className=\"App\">\r\n            <div className=\"calculator\">\r\n                \r\n                <div className=\"display\">\r\n                    {result ? <span>(0{result})</span> : ''}&nbsp;\r\n                    { calc || \"0\" }\r\n                </div>\r\n\r\n                <div className=\"operators\">\r\n                    <button onClick={() => updateCalc('/')}>/</button>\r\n                    <button onClick={() => updateCalc('*')}>*</button>\r\n                    <button onClick={() => updateCalc('+')}>+</button>\r\n                    <button onClick={() => updateCalc('-')}>-</button>\r\n\r\n                    <button onClick={deleteLast}>DEL</button>\r\n                </div>\r\n\r\n                <div className=\"digits\">\r\n                    { createDigits() }\r\n                    <button onClick={() => updateCalc('/0')}>0</button>\r\n                    <button onClick={() => updateCalc('.')}>.</button>\r\n\r\n                    <button onClick={calculate}>=</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './calculator/calc';\n\n//render method takes source (App) and destination (root)\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}